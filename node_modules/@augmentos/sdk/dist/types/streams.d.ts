/**
 * Types of streams that TPAs can subscribe to
 *
 * These are events and data that TPAs can receive from the cloud.
 * Not all message types can be subscribed to as streams.
 */
export declare enum StreamType {
    BUTTON_PRESS = "button_press",
    HEAD_POSITION = "head_position",
    GLASSES_BATTERY_UPDATE = "glasses_battery_update",
    PHONE_BATTERY_UPDATE = "phone_battery_update",
    GLASSES_CONNECTION_STATE = "glasses_connection_state",
    LOCATION_UPDATE = "location_update",
    TRANSCRIPTION = "transcription",
    TRANSLATION = "translation",
    VAD = "VAD",
    AUDIO_CHUNK = "audio_chunk",
    PHONE_NOTIFICATION = "phone_notification",
    NOTIFICATION_DISMISSED = "notification_dismissed",
    START_APP = "start_app",
    STOP_APP = "stop_app",
    OPEN_DASHBOARD = "open_dashboard",
    VIDEO = "video",
    ALL = "all",
    WILDCARD = "*"
}
/**
 * Categories of stream data
 */
export declare enum StreamCategory {
    /** Data from hardware sensors */
    HARDWARE = "hardware",
    /** Audio processing results */
    AUDIO = "audio",
    /** Phone-related events */
    PHONE = "phone",
    /** System-level events */
    SYSTEM = "system"
}
/**
 * Map of stream categories for each stream type
 */
export declare const STREAM_CATEGORIES: Record<StreamType, StreamCategory>;
/**
 * Helper function to check if a stream type is of a particular category
 */
export declare function isStreamCategory(streamType: StreamType, category: StreamCategory): boolean;
/**
 * Helper function to get all stream types in a category
 */
export declare function getStreamTypesByCategory(category: StreamCategory): StreamType[];
//# sourceMappingURL=streams.d.ts.map